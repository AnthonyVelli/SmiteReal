{"version":3,"sources":["config/seed.js"],"names":[],"mappings":"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","file":"config/seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n 'use strict';\n import sqldb from '../sqldb';\n import sequelize_fixtures from 'sequelize-fixtures';\n var God = sqldb.God;\n var User = sqldb.User;\n var Item = sqldb.Item;\n var Level = sqldb.Level;\n var Ability = sqldb.Ability;\n var Component = sqldb.Component;\n\n\n\nfunction roundToDecimal (val, places) {\n\treturn +(Math.round(val + 'e+' + places)  + 'e-' + places);\n}\nfunction compoundGrowth (base, inc, times){\n\tinc+=1;\n\tfor (var x = 1; x < times; x++){\n\t\tbase *= inc;\n\t}\n\treturn roundToDecimal(base, 3);\n}\n\nfunction GodFactory (god, level){\n\tthis.level = level;\n\tthis.name = god.name;\n\tthis.health = god.health + (level * god.health_Growth_Rate);\n\tthis.mana = god.mana + (level * god.mana_Growth_Rate);\n\tthis.physical = god.physical + (level * god.physical_Growth_Rate);\n\tthis.magical = roundToDecimal((god.magical + (level * god.magical_Growth_Rate)), 2);\n\tthis.hp5 = roundToDecimal((god.hp5 + (god.hp5_Growth_Rate * level)), 2);\n\tthis.mp5 = roundToDecimal((god.mp5 + (god.mp5_Growth_Rate * level)), 2);\n\tthis.range = roundToDecimal((god.range + (level * god.range_Growth_Rate)), 2);\n\tthis.speed = roundToDecimal((god.speed + (level * god.speed_Growth_Rate)), 2);\n\tthis.physicalprotection = roundToDecimal((god.physicalprotection + (god.physicalprotection_Growth_Rate * level)), 2);\n\tthis.magicalprotection = roundToDecimal((god.magicalprotection + (god.magicalprotection_Growth_Rate * level)), 2);\n\tthis.baseDamage = roundToDecimal((god.damage + (level * god.damage_Growth_Rate)), 2);\n\tthis.damage_Growth_Rate_Inc = god.damage_Growth_Rate_Inc;\n\tthis.damage_Growth_Rate_Type = god.damage_Growth_Rate_Type;\n\tthis.damage = roundToDecimal(this.baseDamage + (this.damage_Growth_Rate_Inc * (this.damage_Growth_Rate_Type === 'Magical Power' ? this.magical : this.physical)), 2);\n\tthis.attack_msec = compoundGrowth(god.attack_Sec, god.attack_Sec_Growth_Rate, level) * 1000;\n\tthis.class = god.class;\n\tthis.smallimg = god.smallimg;\n\tthis.type = god.type;\n}\n\n\n\n\nLevel.sync({force: true})\n.then(() => Level.destroy({ where: {} }));\n//Levels seeded after god's are seeded below//\n\nGod.sync({force: true})\n.then(() => God.destroy({ where: {} }))\n.then(() => sequelize_fixtures.loadFile('./seedData/gods.json', {gods: God}))\n.then(done => {\n\tconsole.log('Gods seeded')\n\treturn God.findAll(); })\n.then(allGods => {\n\tvar allGodsAllLevels = [];\n\tallGods.forEach(god => {\n\t\tfor (var x = 1; x <=20; x++) {\n\t\t\tallGodsAllLevels.push(new GodFactory(god, x));\n\t\t}\n\t})\n\treturn Level.bulkCreate(allGodsAllLevels); })\n.then(() => console.log('Levels Seeded'))\n.catch(err => console.error(err));\n\n\nItem.sync({force: true})\n.then(() => Item.destroy({ where: {} }))\n.then(() => sequelize_fixtures.loadFile('./seedData/itemsFinal.json', {items: Item}))\n.then(done => console.log('Items seeded'))\n.then(() => Ability.sync({force: true}))\n.then(() => Ability.destroy({ where: {} }))\n.then(() => Component.sync({force: true}))\n.then(() => Component.destroy({ where: {} }))\n.then(() => sequelize_fixtures.loadFile('./seedData/itemTable/itemPassiveTable.json', {ability: Ability, component: Component}))\n.then(() => Ability.findAll() )\n.then(abilities => {\n\tvar associateItemsPromise = abilities.map(ability => {\n\t\treturn Item.findOne({where: {name: ability.name}})\n\t\t.then(item => item.setAbility(ability))\n\t})\n\tPromise.all(associateItemsPromise); })\n.then(() => console.log('abilities associated with items'))\n.catch((err) => console.error(err));\n\n\n\nUser.sync()\n.then(() => User.destroy({ where: {} }))\n.then(() => {\n\tUser.bulkCreate([{\n\t\tprovider: 'local',\n\t\tname: 'Test User',\n\t\temail: 'test@example.com',\n\t\tpassword: 'test'\n\t}, {\n\t\tprovider: 'local',\n\t\trole: 'admin',\n\t\tname: 'Admin',\n\t\temail: 'admin@example.com',\n\t\tpassword: 'admin'\n\t}])\n\t.then(() => {\n\t\tconsole.log('finished populating users');\n\t});\n});\n"],"sourceRoot":"/source/"}