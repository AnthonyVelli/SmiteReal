{"version":3,"sources":["api/item/item.model.js"],"names":[],"mappings":"AAAA;;;;;;kBAEe,UAAS,SAAT,EAAoB,SAApB,EAA+B;AAC5C,SAAO,UAAU,MAAV,CAAiB,MAAjB,EAAyB;AAC9B,SAAK;AACH,YAAM,UAAU,OADb;AAEH,iBAAW,KAFR;AAGH,kBAAY,IAHT;AAIH,qBAAe;AAJZ,KADyB;AAO9B,UAAM,UAAU,MAPc;AAQ9B,WAAO,UAAU,MARa;AAS9B,WAAO,UAAU,MATa;AAU9B,UAAM,EAAC,MAAM,UAAU,MAAjB,EAAyB,KAAK,eAAW;AAAC,eAAO,KAAK,YAAL,CAAkB,MAAlB,EAA0B,KAA1B,CAAgC,GAAhC,EAAqC,GAArC,CAAyC;AAAA,iBAAQ,KAAK,IAAL,EAAR;AAAA,SAAzC,CAAP;AAAqE,OAA/G,EAVwB;AAW9B,UAAM,UAAU,OAXc;AAY9B,iBAAa,UAAU,IAZO;AAa9B,gBAAY,UAAU,MAbQ;AAcjC,iBAAa,UAAU,KAdU;AAejC,uBAAmB,UAAU,KAfI;AAgBjC,0BAAsB,UAAU,KAhBC;AAiBjC,2BAAuB,UAAU,KAjBA;AAkBjC,YAAQ,UAAU,KAlBe;AAmBjC,SAAK,UAAU,KAnBkB;AAoBjC,sBAAkB,UAAU,KApBK;AAqBjC,wBAAoB,UAAU,KArBG;AAsBjC,aAAS,UAAU,KAtBc;AAuBjC,uBAAmB,UAAU,KAvBI;AAwBjC,UAAM,UAAU,KAxBiB;AAyBjC,WAAO,UAAU,KAzBgB;AA0BjC,SAAK,UAAU,KA1BkB;AA2BjC,uBAAmB,UAAU,KA3BI;AA4BjC,yBAAqB,UAAU,KA5BE;AA6BjC,cAAU,UAAU,KA7Ba;AA8BjC,wBAAoB,UAAU;AA9BG,GAAzB,EA+BJ,EAAC,eAAe;AAClB,kBAAY,sBAAW;AAAA;;AACtB,YAAI,QAAQ,EAAZ;AACA,cAAM,OAAN,CAAc;AAAA,iBAAQ,MAAK,IAAL,MAAe,MAAM,IAAN,IAAc,MAAK,IAAL,CAA7B,CAAR;AAAA,SAAd;AACA,eAAO,KAAP;AACA;AALiB,KAAhB,EA/BI,CAAP;AAsCD,C;;AAxCD,IAAM,QAAQ,CAAC,aAAD,EAAgB,mBAAhB,EAAqC,sBAArC,EAA6D,uBAA7D,EAAsF,QAAtF,EAAgG,KAAhG,EAAuG,kBAAvG,EAA2H,oBAA3H,EAAiJ,SAAjJ,EAA4J,mBAA5J,EAAiL,MAAjL,EAAyL,OAAzL,EAAkM,KAAlM,EAAyM,mBAAzM,EAA8N,qBAA9N,EAAqP,UAArP,EAAiQ,oBAAjQ,CAAd","file":"api/item/item.model.js","sourcesContent":["'use strict';\nconst stats = ['attack_msec', 'cooldownreduction', 'criticalstrikechance', 'crowdcontrolreduction', 'health', 'hp5', 'magicallifesteal', 'magicalpenetration', 'magical', 'magicalprotection', 'mana', 'speed', 'mp5', 'physicallifesteal', 'physicalpenetration', 'physical', 'physicalprotection'];\nexport default function(sequelize, DataTypes) {\n  return sequelize.define('Item', {\n    _id: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    name: DataTypes.STRING,\n    image: DataTypes.STRING,\n    class: DataTypes.STRING,\n    pros: {type: DataTypes.STRING, get: function() {return this.getDataValue('pros').split(',').map(prop => prop.trim())}},\n    cost: DataTypes.INTEGER,\n    description: DataTypes.TEXT,\n    startsFrom: DataTypes.STRING,\n\tattack_msec: DataTypes.FLOAT,\n\tcooldownreduction: DataTypes.FLOAT,\n\tcriticalstrikechance: DataTypes.FLOAT,\n\tcrowdcontrolreduction: DataTypes.FLOAT,\n\thealth: DataTypes.FLOAT,\n\thp5: DataTypes.FLOAT,\n\tmagicallifesteal: DataTypes.FLOAT,\n\tmagicalpenetration: DataTypes.FLOAT,\n\tmagical: DataTypes.FLOAT,\n\tmagicalprotection: DataTypes.FLOAT,\n\tmana: DataTypes.FLOAT,\n\tspeed: DataTypes.FLOAT,\n\tmp5: DataTypes.FLOAT,\n\tphysicallifesteal: DataTypes.FLOAT,\n\tphysicalpenetration: DataTypes.FLOAT,\n\tphysical: DataTypes.FLOAT,\n\tphysicalprotection: DataTypes.FLOAT\n  }, {getterMethods: {\n  \tproperties: function() {\n  \t\tlet props = {};\n  \t\tstats.forEach(stat => this[stat] && (props[stat] = this[stat]));\n  \t\treturn props;\n  \t}\n  }});\n}"],"sourceRoot":"/source/"}