{"version":3,"sources":["api/component/component.events.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAEA;;AACA,IAAI,YAAY,QAAQ,aAAR,EAAuB,SAAvC;AACA,IAAI,kBAAkB,0BAAtB;;;AAGA,gBAAgB,eAAhB,CAAgC,CAAhC;;;AAGA,IAAI,SAAS;AACX,iBAAe,MADJ;AAEX,iBAAe,MAFJ;AAGX,kBAAgB;AAHL,CAAb;;;AAOA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,YAAU,IAAV,CAAe,CAAf,EAAkB,UAAU,KAAV,CAAlB;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAS,GAAT,EAAc,OAAd,EAAuB,IAAvB,EAA6B;AAClC,oBAAgB,IAAhB,CAAqB,QAAQ,GAAR,GAAc,IAAI,GAAvC,EAA4C,GAA5C;AACA,oBAAgB,IAAhB,CAAqB,KAArB,EAA4B,GAA5B;AACA,SAAK,IAAL;AACD,GAJD;AAKD;;kBAEc,e","file":"api/component/component.events.js","sourcesContent":["/**\n * Component model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar Component = require('../../sqldb').Component;\nvar ComponentEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nComponentEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'afterCreate': 'save',\n  'afterUpdate': 'save',\n  'afterDestroy': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  Component.hook(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc, options, done) {\n    ComponentEvents.emit(event + ':' + doc._id, doc);\n    ComponentEvents.emit(event, doc);\n    done(null);\n  }\n}\n\nexport default ComponentEvents;\n"],"sourceRoot":"/source/"}